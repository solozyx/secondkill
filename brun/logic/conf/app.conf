httpaddr = "0.0.0.0"
httpport = 9092
appname = SeckillLogic

runmode ="${ProRunMode||dev}"

autorender=false

[dev]

[logs]
log_level=debug
log_path=./logs/seckilllogic.log

[etcd]
etcd_addr = 192.168.174.134:2379
etcd_timeout = 5
etcd_seckill_key = /solozyx/seckill
etcd_seckill_product_key=/goods

[redis]
# redis的配置可以存储在etcd,更改配置需要更改proxy和logic层 只改到1个地方 会出错
# redis 秒杀接入层->业务逻辑层
redis_proxy_to_logic_addr = 192.168.174.134:6379
redis_proxy_to_logic_idle = 64
redis_proxy_to_logic_active = 0
redis_proxy_to_logic_idle_timeout = 300
# redis 业务逻辑层->秒杀接入层
redis_logic_to_proxy_addr = 192.168.174.134:6379
redis_logic_to_proxy_idle = 64
redis_logic_to_proxy_active = 0
redis_logic_to_proxy_idle_timeout = 300

[goroutine]
# 操作redis的goroutine数量
goroutine_num_read_proxy_request_from_redis = 16
goroutine_num_write_logic_response_to_redis = 16
# 秒杀逻辑层处理SeckillRequest的协程数量
goroutine_num_seckill_handle = 16

[channel]
# channel的size设置为10万 根据实际的处理能力 处理协程每秒只能接收10万那么就定义10万
channel_size_read_proxy_request = 100000
# 秒杀逻辑层处理秒杀结果写入管道size
channel_size_write_logic_response = 100000

[timeout]
# 秒杀接入层与客户端连接最多保持 30秒 超过30秒的过期请求秒杀逻辑层直接丢弃不做处理
timeout_proxy_max_alive = 30
# 秒杀SecRequest请求过多导致存放SecRequest的chan堆积 超时丢弃本次秒杀请求处理 100毫秒
timeout_logic_secrequest_chan = 100
# 秒杀SecRequest请求过多导致存放SecResponse的chan堆积 超时丢弃本次秒杀响应 100毫秒
timeout_logic_secresponse_chan = 100

[token]
# token密钥 秒杀逻辑层生成token到商城加购物车
seckill_token_passwd = fIOxU7iik65vVvBGtNcnrjL4E9MdRpTfzzxE3dx6b7BAHN5etUdSzRW5yjzHzFGW